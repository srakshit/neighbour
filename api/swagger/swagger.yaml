swagger: "2.0"
info:
  version: "0.0.1"
  title: Subscriber Service
# during dev, should point to your local machine
host: localhost:8081
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /subscribers/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: registration
    get:
      description: Returns Subscriber to the caller
      # used as the method name of the controller
      operationId: getSubscriberbyId
      parameters:
        - in: path
          name: id
          description: Subscriber Id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /subscribers/email/{email}:
    # binds a127 app logic to a route
    x-swagger-router-controller: registration
    get:
      description: Returns Subscriber to the caller
      # used as the method name of the controller
      operationId: getSubscriberByEmail
      parameters:
        - in: path
          name: email
          description: Subscriber Email
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /subscribers:
    x-swagger-router-controller: registration
    post:
      operationId: addSubscriber
      description: Add a subscriber to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: subscriber
        required: true
        description: Add Subscriber
        schema:
          $ref: '#/definitions/AddSubscriber'
      responses:
        201:
          description: subscriber added
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        400:
          description: invalid input, object invalid
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        409:
          description: an existing user already exists
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    
    put:
      summary: Update an existing subscriber
      operationId: updateSubscriber
      description: Update an existing subscriber
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: subscriber
        required: true
        description: Update Subscriber
        schema:
          $ref: '#/definitions/UpdateSubscriber'
      responses:
        204:
          description: Subscriber updated
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        400:
          description: Invalid subscriber id provided
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  AddSubscriber:
    type: object
    required:
    - firstName
    - lastName
    - email
    - phone
    - address
    - city
    - postcode
    properties:
      firstName:
        type: string
        minLength: 1
        example: Sherlock
      lastName:
        type: string
        minLength: 1
        example: Holmes
      email:
        type: string
        format: email
        example: sherlock.holmes@detective.com
      phone:
        type: string
        minLength: 11
        maxLength: 11
        example: 0123456789
      address:
        type: string
        minLength: 1
        example: 221B Baker Steeet
      city:
        type: string
        minLength: 1
        example: London
      county:
        type: string
        minLength: 1
        example: Londng Borough
      postcode:
        type: string
        minLength: 6
        maxLength: 9
        description: Postcode without spaces
        example: SW19 01B
  UpdateSubscriber:
    type: object
    required:
    - id
    - email
    properties:
      id:
        type: string
        minLength: 12
        example: CRS7GA000001
      firstName:
        type: string
        minLength: 1
        example: Sherlock
      lastName:
        type: string
        minLength: 1
        example: Holmes
      email:
        type: string
        format: email
        example: sherlock.holmes@detective.com
      phone:
        type: string
        minLength: 11
        maxLength: 11
        example: 0123456789
      address:
        type: string
        minLength: 1
        example: 221B Baker Steeet
      city:
        type: string
        minLength: 1
        example: London
      county:
        type: string
        minLength: 1
        example: Londng Borough
      postcode:
        type: string
        minLength: 6
        maxLength: 9
        description: Postcode without spaces
        example: SW19 01B
      isActive:
        type: boolean
        description: Subscriber status (active/inactive)
        example: true
      stripeCustomerId:
        type: string
        minLength: 18
        maxLength: 18
        description: Subscriber Stripe customer ID
        example: true
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
